{
  "id": "a0198b4b346e",
  "title": "Some Things That Helped Me When Learning React",
  "createdAt": "2023-04-04 00:48:33",
  "tags": [
    "react"
  ],
  "url": "https://chepenikconor.medium.com/some-things-that-helped-me-when-learning-react-a0198b4b346e",
  "content": "# Some Things That Helped Me When Learning React\n\n![](https://miro.medium.com/0*pTe6tTLTviI7Iaou)\n\nWhy are there so many JavaScript frameworks, yet React seems to be the daddy?\n\nBecause React is always keeping its components in check!\n\nBad Dad jokes aside, React is a fantastic framework to learn as a developer. While it may take some time to fully grasp, it's definitely worth the effort. React's approach to breaking down user interfaces into smaller, reusable components helps keep code organized and maintainable. Additionally, the ability to test and debug each component separately makes it a great choice for building complex applications. So if you're looking to improve your skills as a developer, React is definitely a framework to consider!\n\nWhen we create a component, we want to ensure that it has a single responsibility or purpose. This means that it should handle only one part of the page or application, and be responsible for rendering that part. By doing this, we can build complex UIs by composing smaller, simpler components together.\n\nTo achieve this, we can nest components inside one another. This means that a component can call another component and render it within its own code. The component doing the calling is called the parent component, while the component being called and rendered is the child component. This nesting of components allows us to further separate the responsibilities of different components, and create a more modular, reusable architecture.\n\nReact uses the Document Object Model (DOM) to render everything on the page. The DOM is a tree-like structure that represents the HTML content of a web page. React creates its own virtual representation of the DOM, called the Virtual DOM. When a React component is rendered, it creates a Virtual DOM tree, which is essentially a lightweight copy of the actual DOM. This Virtual DOM tree is then used to determine what changes need to be made to the actual DOM in order to update the user interface.\n\nWhen a component's state or props change, React compares the previous Virtual DOM tree with the new one. It identifies the differences between the two trees and calculates the minimum number of changes required to update the actual DOM. These changes are then batched together and applied to the DOM all at once, minimizing the number of actual updates to the page. By using the Virtual DOM, React can optimize the updating process and improve the performance of the application.\n\nJSX is a syntax extension for JavaScript that allows us to write HTML-like syntax in our JavaScript code. It can feel a little strange at first, especially if you're coming from a traditional web development background. However, JSX is an incredibly powerful tool for building dynamic and interactive user interfaces. By allowing developers to combine HTML and JavaScript, JSX enables a more declarative and intuitive approach to building web pages and web applications.\n\nWith JSX, developers can create reusable and modular components, which can be composed together to create complex UIs. This approach also allows for more efficient rendering, as React only updates the parts of the DOM that have changed, rather than re-rendering the entire page every time.\n\nOverall, React's use of components, the Virtual DOM, and JSX provides a powerful and efficient approach to building complex user interfaces. By using these tools, developers can write declarative, modular code that is easy to understand and maintain, and that provides a fast and responsive user experience.\n\nI will end this with a fun fact: React was originally developed by Facebook's software engineer, [Jordan Walke](https://twitter.com/jordwalke?s=20), as a way to simplify the codebase for Facebook's Ads Manager. The first version of React was released in 2013, and since then it has become one of the most popular and widely used front-end libraries in the world.\n\nHappy developing!",
  "wordCount": 631,
  "readingTime": 2.5811320754716984,
  "claps": 0,
  "voters": 0
}